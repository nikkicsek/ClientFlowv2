Build a customizable client-facing project management dashboard web application using Replit, incorporating features inspired by Agency Analytics, which is a client reporting platform for marketing agencies. Agency Analytics automates marketing reports, centralizes client data from various integrations (e.g., SEO tools like Google Search Console and Semrush, PPC like Google Ads, social media like Facebook and Instagram, website analytics like Google Analytics), provides prebuilt customizable dashboards and reports for services such as SEO, PPC, ecommerce, and social media, enables task assignment and performance tracking, and offers access controls for secure client and team collaboration. In this app, include similar automated reporting and analytics capabilities to help our agency prove value, track performance metrics, and centralize data visualization for clients.
Our agency offers services like website design and development, custom programming, brand strategy, brand development, marketing strategy, ad spend management, social media organic posting, blog and content writing, SEO optimization, AI assessment and strategy, collateral design, e-newsletter design and sending, Go High Level setup/management/support, AI integration, app development, and account management. Each client gets a unique project based on a custom quote approved after a discovery call.
Key features:

User Authentication: Secure login system for clients (username/password or email-based). Include registration for new clients (admin-approved). Admins (agency staff) should have separate login to manage projects and reports.
Client Dashboard: After login, clients see a personalized dashboard showing their active projects. Display project overview (e.g., start date, expected completion, overall progress percentage). List tasks/services with statuses: in progress, outstanding, needs approval, needs clarification, completed. Include sections for updates/reports from the agency at set intervals. Inspired by Agency Analytics, add an analytics section with customizable widgets/charts (e.g., line graphs for SEO rankings, bar charts for social media engagement, pie charts for ad spend ROI) to display performance metrics for relevant services. Allow clients to view automated monthly/weekly reports summarizing progress and metrics.
Project Management for Admins: Admin interface to create/edit projects for specific clients. Assign tasks based on services (use a dropdown or multi-select for our service list). Update task statuses, add notes/comments, upload files (e.g., designs for approval). Notify clients via in-app alerts or email for approvals/clarifications. Include tools to input/upload metrics data (e.g., SEO keywords performance, social media stats) and generate automated reports.
Reporting and Analytics System (Similar to Agency Analytics): Build in automated report generation (e.g., PDF exports or in-app views) that pull from project data and metrics. Centralize data visualization with prebuilt templates for common services (e.g., SEO dashboard showing traffic sources, keyword rankings; social media dashboard with post engagement metrics; PPC with click-through rates and conversions). Make it customizable per client—e.g., white-label options to match branding, and modular widgets for adding/removing metrics. Include basic placeholders for integrations (e.g., API endpoints to fetch data from external tools like Google Analytics—implement mock data for now, with comments on how to add real integrations). Enable access controls so clients see only their data, and admins can assign/view team tasks related to metrics tracking.
Customization: Make it easy to customize per client—e.g., tailor the dashboard to show only relevant services and analytics from their quote. Use modular components for adding new services or metrics widgets.
Data Storage: Use a database (e.g., SQLite or MongoDB) to store users, projects, tasks, statuses, and metrics data. Ensure data is client-specific and secure.
UI/UX: Modern, responsive design (mobile-friendly). Use charts/graphs for progress and analytics (e.g., via Chart.js library). Simple navigation with sidebar menu, including tabs for project status and analytics/reports.
Tech Stack: Suggest Node.js/Express for backend, React for frontend, and a CSS framework like Bootstrap for styling. Include basic security (e.g., JWT for auth). For charts, use Chart.js or similar.
Additional Nice-to-Haves: File uploads for client approvals, real-time updates (if possible with WebSockets), export reports as PDF, mock data generators for analytics to simulate integrations.

Start with a basic MVP that's functional and expandable. Provide clear code structure, comments, and instructions for running/deploying on Replit.